{
  "uid" : "56677e7b0ce3e2f9",
  "name" : "test_station_info[caseinfo0]",
  "fullName" : "testcase.test_5_user.Test_station_info#test_station_info",
  "historyId" : "f07267812cc8f195567215ec1c417792",
  "time" : {
    "start" : 1667537733640,
    "stop" : 1667537736748,
    "duration" : 3108
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <test_5_user.Test_station_info object at 0x0000012E7E84ECC0>\ncaseinfo = {'assert': 'total', 'header': 'L9JK4U#NgrpB7iW5bNqFuw3vZRG3p', 'name': '测试用例1:上传正确参数值，正确cookie值,能获取所有用户信息', 'request':...nt': None, 'offset': None, 't': '1667537735'}, 'method': 'get', 'url': 'https://noc-test.merckuwifi.com/api/endusers'}}\n\n>   ???\n\nF:\\Project\\noc_api_auto\\testcase\\test_5_user.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.assert_case.ResponseAssert object at 0x0000012E7ECB0A20>\nexcepct = 'total', actual = {'detail': 'HTTP 401: Unauthorized'}\n\n    def assert_in(self,excepct,actual):\n        if '{' in str(excepct):\n            if  (str(excepct).split('{')[1].split('}')[0]) in str(actual):\n                get_log().info(f\"断言检查点：预期响应结果 {excepct}\")\n                get_log().info(f\"断言检查点：实际结果响应结果 {actual}\")\n                get_log().info(\"测试结果：预期结果包含在实际结果内，测试用例通过\")\n                assert True\n            else:\n                get_log().error(f\"断言检查点：预期响应结果 {excepct}\")\n                get_log().error(f\"断言检查点：实际结果响应结果 {actual}\")\n                get_log().error(\"测试结果：实际结果不包含在预期结果内，测试用例失败\")\n                assert False\n        else:\n            if str(excepct) in str(actual):\n                get_log().info(f\"断言检查点：预期响应结果 {excepct}\")\n                get_log().info(f\"断言检查点：实际结果响应结果 {actual}\")\n                get_log().info(\"测试结果：预期结果包含在实际结果内，测试用例通过\")\n                assert True\n            else:\n                get_log().error(f\"断言检查点：预期响应结果 {excepct}\")\n                get_log().error(f\"断言检查点：实际结果响应结果 {actual}\")\n                get_log().error(\"测试结果：实际结果不包含在预期结果内，测试用例失败\")\n>               assert False\nE               AssertionError\n\ncommon\\assert_case.py:44: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "clean_yaml",
    "time" : {
      "start" : 1667537656217,
      "stop" : 1667537656217,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "delet_log",
    "time" : {
      "start" : 1667537656218,
      "stop" : 1667537656219,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "login",
    "time" : {
      "start" : 1667537656219,
      "stop" : 1667537657754,
      "duration" : 1535
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <test_5_user.Test_station_info object at 0x0000012E7E84ECC0>\ncaseinfo = {'assert': 'total', 'header': 'L9JK4U#NgrpB7iW5bNqFuw3vZRG3p', 'name': '测试用例1:上传正确参数值，正确cookie值,能获取所有用户信息', 'request':...nt': None, 'offset': None, 't': '1667537735'}, 'method': 'get', 'url': 'https://noc-test.merckuwifi.com/api/endusers'}}\n\n>   ???\n\nF:\\Project\\noc_api_auto\\testcase\\test_5_user.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.assert_case.ResponseAssert object at 0x0000012E7ECB0A20>\nexcepct = 'total', actual = {'detail': 'HTTP 401: Unauthorized'}\n\n    def assert_in(self,excepct,actual):\n        if '{' in str(excepct):\n            if  (str(excepct).split('{')[1].split('}')[0]) in str(actual):\n                get_log().info(f\"断言检查点：预期响应结果 {excepct}\")\n                get_log().info(f\"断言检查点：实际结果响应结果 {actual}\")\n                get_log().info(\"测试结果：预期结果包含在实际结果内，测试用例通过\")\n                assert True\n            else:\n                get_log().error(f\"断言检查点：预期响应结果 {excepct}\")\n                get_log().error(f\"断言检查点：实际结果响应结果 {actual}\")\n                get_log().error(\"测试结果：实际结果不包含在预期结果内，测试用例失败\")\n                assert False\n        else:\n            if str(excepct) in str(actual):\n                get_log().info(f\"断言检查点：预期响应结果 {excepct}\")\n                get_log().info(f\"断言检查点：实际结果响应结果 {actual}\")\n                get_log().info(\"测试结果：预期结果包含在实际结果内，测试用例通过\")\n                assert True\n            else:\n                get_log().error(f\"断言检查点：预期响应结果 {excepct}\")\n                get_log().error(f\"断言检查点：实际结果响应结果 {actual}\")\n                get_log().error(\"测试结果：实际结果不包含在预期结果内，测试用例失败\")\n>               assert False\nE               AssertionError\n\ncommon\\assert_case.py:44: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8baf057edfe55adb",
      "name" : "log",
      "source" : "8baf057edfe55adb.txt",
      "type" : "text/plain",
      "size" : 937
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "用户信息模块"
  }, {
    "name" : "tag",
    "value" : "user_info"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_5_user"
  }, {
    "name" : "subSuite",
    "value" : "Test_station_info"
  }, {
    "name" : "host",
    "value" : "ycccccc"
  }, {
    "name" : "thread",
    "value" : "4132-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_5_user"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "caseinfo",
    "value" : "{'name': '测试用例1:上传正确参数值，正确cookie值,能获取所有用户信息', 'request': {'method': 'get', 'url': 'https://noc-test.merckuwifi.com/api/endusers', 'data': {'offset': None, 'count': None, 't': None}}, 'header': None, 'assert': 'total'}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "user_info" ]
  },
  "source" : "56677e7b0ce3e2f9.json",
  "parameterValues" : [ "{'name': '测试用例1:上传正确参数值，正确cookie值,能获取所有用户信息', 'request': {'method': 'get', 'url': 'https://noc-test.merckuwifi.com/api/endusers', 'data': {'offset': None, 'count': None, 't': None}}, 'header': None, 'assert': 'total'}" ]
}