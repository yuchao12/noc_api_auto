{"name": "test_station_info[caseinfo2]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_3_station_info.Test_station_info object at 0x000001C94E401080>\ncaseinfo = {'assert': 'status', 'header': 'CM3NNH#NgrpB7iW5bNqFuw3vZRG3p', 'name': '测试用例3：传入实时时间，设备sn号，正确cookie值,不传参数值state,不能获取设...a': {'t': '1650875523'}, 'fields': 'mode,wifi,wan,enduser,status', 'method': 'get', 'station': '080052203000111', ...}}\n\n    def test_station_info(self,caseinfo):\n        get_log().info('查询设备详细信息模块')\n        name=caseinfo['name']\n        method = caseinfo['request']['method']\n        if caseinfo['request']['station'] is None:\n            url = caseinfo['request']['url']+'?fields='+caseinfo['request']['fields']\n        else:\n            url = caseinfo['request']['url']+caseinfo['request']['station']+'?fields='+caseinfo['request']['fields']\n        if caseinfo['header'] is None:\n            caseinfo['header'] = yamlUtil().read_extract_yml('cookies')\n        header = {'cookie': '_cookie=' + caseinfo['header']}\n        if caseinfo['request']['data']['t'] is None:\n             caseinfo['request']['data']['t'] = str(int(time.time()))\n        data = caseinfo['request']['data']\n        rep = RequestsUtil().send_request(method,url,data,headers=header)\n        status_code=rep.status_code\n        actual = rep.json()\n        expect = caseinfo['assert']\n        ConsoleFmt().all_console_fmt(name=name,url=url,method=method, data=data,\n        response=rep.json(),status_code=status_code,cookie=header)\n>       ResponseAssert().assert_in(expect,actual)\n\ntestcase\\test_3_station_info.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.assert_case.ResponseAssert object at 0x000001C94E5BFF60>\nexcepct = 'status', actual = {'detail': 'HTTP 401: Unauthorized'}\n\n    def assert_in(self,excepct,actual):\n        if '{' in str(excepct):\n            if  (str(excepct).split('{')[1].split('}')[0]) in str(actual):\n                get_log().info(f\"断言检查点：预期响应结果 {excepct}\")\n                get_log().info(f\"断言检查点：实际结果响应结果 {actual}\")\n                get_log().info(\"测试结果：预期结果包含在实际结果内，测试用例通过\")\n                assert True\n            else:\n                get_log().error(f\"断言检查点：预期响应结果 {excepct}\")\n                get_log().error(f\"断言检查点：实际结果响应结果 {actual}\")\n                get_log().error(\"测试结果：实际结果不包含在预期结果内，测试用例失败\")\n                assert False\n        else:\n            if str(excepct) in str(actual):\n                get_log().info(f\"断言检查点：预期响应结果 {excepct}\")\n                get_log().info(f\"断言检查点：实际结果响应结果 {actual}\")\n                get_log().info(\"测试结果：预期结果包含在实际结果内，测试用例通过\")\n                assert True\n            else:\n                get_log().error(f\"断言检查点：预期响应结果 {excepct}\")\n                get_log().error(f\"断言检查点：实际结果响应结果 {actual}\")\n                get_log().error(\"测试结果：实际结果不包含在预期结果内，测试用例失败\")\n>               assert False\nE               AssertionError\n\ncommon\\assert_case.py:44: AssertionError"}, "attachments": [{"name": "log", "source": "ae9e2fb6-6359-4a38-982d-22ee9a4a6303-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "caseinfo", "value": "{'name': '测试用例3：传入实时时间，设备sn号，正确cookie值,不传参数值state,不能获取设备总数量', 'request': {'method': 'get', 'url': 'https://noc-test.merckuwifi.com/api/meshes/', 'station': '080052203000111', 'fields': 'mode,wifi,wan,enduser,status', 'data': {'t': None}}, 'header': None, 'assert': 'status'}"}], "start": 1650875523938, "stop": 1650875524995, "uuid": "d6658ff3-9c33-487b-8724-03abebb6f1a6", "historyId": "5982490776b37ea17ec9b40b275b90d0", "testCaseId": "a4332378bd7fa84563723aa76566dd92", "fullName": "testcase.test_3_station_info.Test_station_info#test_station_info", "labels": [{"name": "feature", "value": "查询设备详细信息模块"}, {"name": "tag", "value": "station_info"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_3_station_info"}, {"name": "subSuite", "value": "Test_station_info"}, {"name": "host", "value": "yccc"}, {"name": "thread", "value": "14604-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_3_station_info"}]}